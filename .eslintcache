[{"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/reportWebVitals.js":"1","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/App.js":"2","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/index.js":"3","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TipsContext.js":"4","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TravelStore.js":"5","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/travelStore.js":"6","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Register.js":"7","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Login.js":"8","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/NavBar.js":"9","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Settings.js":"10","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/UpdateUser.js":"11","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionsPage.js":"12","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/ChangePassword.js":"13","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DeleteUser.js":"14","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionForm.js":"15","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Favorites.js":"16","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DisplaySuggestion.js":"17","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/VotesUpOrDown.js":"18","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/withIsLoggedOut.js":"19"},{"size":362,"mtime":1610508133964,"results":"20","hashOfConfig":"21"},{"size":3870,"mtime":1611416467109,"results":"22","hashOfConfig":"21"},{"size":587,"mtime":1610666810995,"results":"23","hashOfConfig":"21"},{"size":451,"mtime":1610673060772,"results":"24","hashOfConfig":"21"},{"size":306,"mtime":1610565509831,"results":"25","hashOfConfig":"21"},{"size":147,"mtime":1611359399481,"results":"26","hashOfConfig":"21"},{"size":4967,"mtime":1611365409797,"results":"27","hashOfConfig":"21"},{"size":3698,"mtime":1611365528146,"results":"28","hashOfConfig":"21"},{"size":1486,"mtime":1611362469883,"results":"29","hashOfConfig":"21"},{"size":644,"mtime":1611356903975,"results":"30","hashOfConfig":"21"},{"size":4237,"mtime":1611421485239,"results":"31","hashOfConfig":"21"},{"size":3667,"mtime":1611416221292,"results":"32","hashOfConfig":"21"},{"size":4272,"mtime":1611421517617,"results":"33","hashOfConfig":"21"},{"size":2782,"mtime":1611421557511,"results":"34","hashOfConfig":"21"},{"size":7390,"mtime":1611357817603,"results":"35","hashOfConfig":"21"},{"size":154,"mtime":1611027136308,"results":"36","hashOfConfig":"21"},{"size":1584,"mtime":1611366054590,"results":"37","hashOfConfig":"21"},{"size":2122,"mtime":1611341484752,"results":"38","hashOfConfig":"21"},{"size":503,"mtime":1611421855343,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ect072",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/reportWebVitals.js",[],["83","84"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/App.js",["85"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/index.js",[],["86","87"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TipsContext.js",[],["88","89"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TravelStore.js",["90"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/travelStore.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Register.js",["91","92"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Login.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/NavBar.js",["93","94"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Settings.js",[],["95","96"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/UpdateUser.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionsPage.js",["97"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/ChangePassword.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DeleteUser.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionForm.js",["98"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport { runInAction, toJS } from \"mobx\";\nimport { useTravelStore } from \"../TipsContext\";\n\nconst SuggestionFormInput = (props) => {\n  return (\n    <div className={`suggestion-form ${props.longtext ? \"ic-big\" : \"\"}`}>\n      <div className=\"input-prefix-icon\">\n        <i className={`fas ${props.icon}`}></i>\n      </div>\n      <div>\n        {props.longtext ? (\n          <textarea\n            value={props.value}\n            placeholder={props.placeholder}\n            rows=\"5\"\n            onChange={props.onChange}\n            name={props.name}\n          ></textarea>\n        ) : (\n          <input\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n            autoComplete=\"off\"\n            placeholder={props.placeholder}\n            ref={props.ref}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n/*global google*/\nconst LocationAutocomplete = (props) => {\n  let eleRef = useRef(null);\n  let autocompleteRef = useRef(null);\n  let listenerRef = useRef(null);\n\n  useEffect(() => {\n    let config = {};\n    if (props.citiesOnly) {\n      config = { types: [\"(cities)\"] };\n    }\n    if (eleRef.current && !autocompleteRef.current) {\n      // checks to see if there's no value in the ref\n      let ac = new google.maps.places.Autocomplete(eleRef.current, config);\n\n      autocompleteRef.current = ac;\n      // ac gets assigned to autocompleteRef.current\n      let listener = ac.addListener(\"place_changed\", () => {\n        const place = ac.getPlace();\n        if (!place.geometry) {\n          props.onPlaceChanged(null);\n        } else {\n          props.onPlaceChanged(place);\n        }\n      });\n      listenerRef.current = listener;\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (autocompleteRef.current) {\n      autocompleteRef.current.setComponentRestrictions({\n        country: [props.country],\n      });\n    }\n    if (eleRef.current) {\n      eleRef.current.value = \"\";\n      props.onPlaceChanged(null);\n    }\n  }, [props.country]);\n  return (\n    <div className=\"suggestion-form\">\n      <div className=\"input-prefix-icon\">\n        <i className={`fas ${props.icon}`}></i>\n      </div>\n      <input\n        type=\"text\"\n        name=\"Location\"\n        icon={props.icon}\n        placeholder=\"Enter a location\"\n        ref={eleRef}\n      ></input>\n    </div>\n  );\n};\n\nfunction SuggestionForm() {\n  let history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [labels, setLabels] = useState(\"\");\n  const [place, setPlace] = useState(null);\n  const [city, setCity] = useState(null);\n  const [error, setError] = useState(null);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"US\");\n  const store = useTravelStore();\n\n  useEffect(() => {\n    async function LoadCountries() {\n      let countries = await getCountriesList();\n      setCountries(countries);\n    }\n    LoadCountries();\n  }, []);\n\n  const getCountriesList = async () => {\n    // add try catch later\n    let response = await fetch(\"/places/countries-list\");\n    let data = await response.json();\n    return data;\n  };\n\n  const handleAddSuggestion = async (e) => {\n    e.preventDefault();\n    let allCountries = await getCountriesList();\n    if (!store.user) {\n      setError(\"You must be logged in to create a suggestion.\");\n      return;\n    }\n    if (!place) {\n      setError(\"Please select a place\");\n      return;\n    }\n    if (!city) {\n      setError(\"Please select a city\");\n      return;\n    }\n    let matchingCountry = null;\n    let cityName = null;\n    //iterating over the address_components to locate type=\"country\"\n    componentIter: for (let component of city.address_components) {\n      if (component.types.includes(\"country\")) {\n        // located the country component\n        // iterate over our static list of countries to find a matching country\n        for (let country of allCountries) {\n          if (component.short_name === country.code) {\n            matchingCountry = country;\n            //located matching country\n            continue componentIter;\n          }\n        }\n      }\n      if (component.types.includes(\"locality\")) {\n        cityName = component.long_name;\n      }\n    }\n    if (!cityName) {\n      setError(\"Failed to find city. Please review your input\");\n      return;\n    }\n    if (!matchingCountry) {\n      setError(\"Failed to match location. Please review your input.\");\n      return;\n    }\n    let response = await fetch(\"/suggestions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        place: {\n          country,\n          continent: matchingCountry.continent,\n          city: cityName,\n          name: place.name,\n        },\n        title,\n        description,\n        labels,\n      }),\n    });\n    if (!response.ok) {\n      setError(\"Please fill out the entire form.\");\n      return;\n    } else {\n      let data = await response.json();\n      console.log(data);\n      runInAction(() => {\n        store.suggestion = data;\n      });\n      history.push(`/suggestion/${data.id}`);\n      console.log(toJS(store.suggestion));\n    }\n  };\n\n  return (\n    <div className=\"suggestion-form\">\n      <form\n        className=\"suggestion-form-container\"\n        onSubmit={handleAddSuggestion}\n      >\n        <p style={{ color: \"red\" }}> {error}</p>\n        <h4>Create a new suggestion:</h4>\n        <select\n          className=\"select-container\"\n          value={country}\n          onChange={(e) => setCountry(e.target.value)}\n        >\n          {countries.map((c, id) => {\n            return (\n              <option value={c.code} key={id}>\n                {c.country}\n              </option>\n            );\n          })}\n        </select>\n        <LocationAutocomplete\n          icon=\"fa-map-marker-alt\"\n          citiesOnly\n          onPlaceChanged={(city) => setCity(city)}\n          country={country}\n        />\n        <LocationAutocomplete\n          icon=\"fa-map-marker-alt\"\n          onPlaceChanged={(place) => setPlace(place)}\n          country={country}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-pen-nib\"\n          value={title}\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-comment\"\n          value={description}\n          name=\"title\"\n          placeholder=\"Description\"\n          longtext\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-tag\"\n          value={labels}\n          name=\"tags\"\n          placeholder=\"Tags...\"\n          onChange={(e) => setLabels(e.target.value)}\n        />\n        {/* <pre style={{ width: \"100%\", textAlign: \"left\" }}>\n          place: {JSON.stringify(place, null, 2)}\n        </pre> */}\n        <div id=\"get-login-btn\">\n          <button type=\"submit\" className=\"add-sug-btn\">\n            <i className=\"fas fa-paper-plane fa-lg\"></i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\nexport default observer(SuggestionForm);\n","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Favorites.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DisplaySuggestion.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/VotesUpOrDown.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/withIsLoggedOut.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":17,"nodeType":"105","messageId":"106","endLine":8,"endColumn":25},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":9,"nodeType":"113","messageId":"114","endLine":9,"endColumn":13},{"ruleId":"103","severity":1,"message":"115","line":34,"column":10,"nodeType":"105","messageId":"106","endLine":34,"endColumn":17},{"ruleId":"103","severity":1,"message":"116","line":34,"column":19,"nodeType":"105","messageId":"106","endLine":34,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":29,"column":13,"nodeType":"119","endLine":29,"endColumn":50},{"ruleId":"99","replacedBy":"120"},{"ruleId":"101","replacedBy":"121"},{"ruleId":"103","severity":1,"message":"122","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":75,"column":6,"nodeType":"125","endLine":75,"endColumn":21,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["127"],["128"],["127"],["128"],"no-dupe-keys","Duplicate key 'text'.","ObjectExpression","unexpected","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["127"],["128"],"'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [props, props.country]",{"range":"132","text":"133"},[2125,2140],"[props, props.country]"]