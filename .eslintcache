[{"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/reportWebVitals.js":"1","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/App.js":"2","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/index.js":"3","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TipsContext.js":"4","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TravelStore.js":"5","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/travelStore.js":"6","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Register.js":"7","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Login.js":"8","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/NavBar.js":"9","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Settings.js":"10","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/UpdateUser.js":"11","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionsPage.js":"12","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/ChangePassword.js":"13","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DeleteUser.js":"14","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionForm.js":"15","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Favorites.js":"16","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DisplaySuggestion.js":"17","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/VotesUpOrDown.js":"18"},{"size":362,"mtime":1610508133964,"results":"19","hashOfConfig":"20"},{"size":3798,"mtime":1611275786271,"results":"21","hashOfConfig":"20"},{"size":587,"mtime":1610666810995,"results":"22","hashOfConfig":"20"},{"size":451,"mtime":1610673060772,"results":"23","hashOfConfig":"20"},{"size":306,"mtime":1610565509831,"results":"24","hashOfConfig":"20"},{"size":112,"mtime":1611092627146,"results":"25","hashOfConfig":"20"},{"size":4497,"mtime":1611203935837,"results":"26","hashOfConfig":"20"},{"size":3695,"mtime":1611334203303,"results":"27","hashOfConfig":"20"},{"size":2079,"mtime":1611257719532,"results":"28","hashOfConfig":"20"},{"size":644,"mtime":1610761077017,"results":"29","hashOfConfig":"20"},{"size":4164,"mtime":1611276789424,"results":"30","hashOfConfig":"20"},{"size":2815,"mtime":1611334866442,"results":"31","hashOfConfig":"20"},{"size":4134,"mtime":1611274751608,"results":"32","hashOfConfig":"20"},{"size":2649,"mtime":1611268631231,"results":"33","hashOfConfig":"20"},{"size":7526,"mtime":1611265118273,"results":"34","hashOfConfig":"20"},{"size":154,"mtime":1611027136308,"results":"35","hashOfConfig":"20"},{"size":1585,"mtime":1611332736872,"results":"36","hashOfConfig":"20"},{"size":2100,"mtime":1611275868238,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ect072",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/reportWebVitals.js",[],["81","82"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/App.js",["83"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/index.js",[],["84","85"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TipsContext.js",[],["86","87"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/TravelStore.js",["88"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/travelStore.js",[],["89","90"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Register.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Login.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/NavBar.js",["91"],"import React, { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport { useTravelStore } from \"../TipsContext\";\n\nfunction NavBar(props) {\n  const history = useHistory();\n  const [search, setSearch] = useState(null);\n  const store = useTravelStore();\n\n  const handlesRedirect = (e) => {\n    e.preventDefault();\n    history.push(`/suggestions?city=${encodeURIComponent(search)}`);\n  };\n  const enableFeatures = () => {\n    if (store.user?.user_id) {\n      return (\n        <div className=\"private-features\">\n          <div id=\"add-sug-btn\">\n            <NavLink to=\"/add-suggestion\">\n              <i className=\"fas fa-lightbulb fa-lg\"></i>\n            </NavLink>\n          </div>\n          <div id=\"love-btn\">\n            <NavLink to=\"/favorites\">\n              <i className=\"fas fa-heart fa-lg\"></i>\n            </NavLink>\n          </div>\n          <div id=\"config-btn\">\n            <NavLink to=\"/settings\">\n              <i className=\"fas fa-cog fa-lg\"></i>\n            </NavLink>\n          </div>\n          <div id=\"sign-out-btn\">\n            <a href=\"#\" onClick={props.onLogOut}>\n              <i className=\"fas fa-sign-out-alt fa-lg\"></i>\n            </a>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"nav-bar-container\">\n      <div id=\"home-btn\">\n        <NavLink to=\"/\">\n          <i className=\"fas fa-home fa-lg\"></i>\n        </NavLink>\n      </div>\n      <div id=\"sugs-btn\">\n        <NavLink to=\"/suggestions\">\n          <i className=\"fas fa-atlas fa-lg\"></i>\n        </NavLink>\n      </div>\n\n      <div className=\"search-btn\">\n        <i className=\"fas fa-search fa-lg\"></i>\n        <form onSubmit={handlesRedirect}>\n          <input\n            id=\"input-sug\"\n            type=\"text\"\n            value={props.search}\n            onChange={(e) => setSearch(e.target.value)}\n            autoComplete=\"off\"\n            placeholder=\"search\"\n          />\n        </form>\n      </div>\n\n      {enableFeatures()}\n    </div>\n  );\n}\n\nexport default observer(NavBar);\n",["92","93"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Settings.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/UpdateUser.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionsPage.js",["94"],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/ChangePassword.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DeleteUser.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/SuggestionForm.js",["95"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport { runInAction, toJS } from \"mobx\";\nimport { useTravelStore } from \"../TipsContext\";\n\nconst SuggestionFormInput = (props) => {\n  return (\n    <div className={`suggestion-form ${props.longtext ? \"ic-big\" : \"\"}`}>\n      <div className=\"input-prefix-icon\">\n        <i className={`fas ${props.icon}`}></i>\n      </div>\n      <div>\n        {props.longtext ? (\n          <textarea\n            value={props.value}\n            placeholder={props.placeholder}\n            rows=\"5\"\n            onChange={props.onChange}\n            name={props.name}\n          ></textarea>\n        ) : (\n          <input\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n            autoComplete=\"off\"\n            placeholder={props.placeholder}\n            ref={props.ref}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n/*global google*/\nconst LocationAutocomplete = (props) => {\n  let eleRef = useRef(null);\n  let autocompleteRef = useRef(null);\n  let listenerRef = useRef(null);\n\n  useEffect(() => {\n    let config = {};\n    if (props.citiesOnly) {\n      config = { types: [\"(cities)\"] };\n    }\n    if (eleRef.current && !autocompleteRef.current) {\n      // checks to see if there's no value in the ref\n      let ac = new google.maps.places.Autocomplete(eleRef.current, config);\n\n      autocompleteRef.current = ac;\n      // ac gets assigned to autocompleteRef.current\n      let listener = ac.addListener(\"place_changed\", () => {\n        const place = ac.getPlace();\n        if (!place.geometry) {\n          props.onPlaceChanged(null);\n        } else {\n          props.onPlaceChanged(place);\n        }\n      });\n      listenerRef.current = listener;\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (autocompleteRef.current) {\n      autocompleteRef.current.setComponentRestrictions({\n        country: [props.country],\n      });\n    }\n    if (eleRef.current) {\n      eleRef.current.value = \"\";\n      props.onPlaceChanged(null);\n    }\n  }, [props.country]);\n  return (\n    <div className=\"suggestion-form\">\n      <div className=\"input-prefix-icon\">\n        <i className={`fas ${props.icon}`}></i>\n      </div>\n      <input\n        type=\"text\"\n        name=\"Location\"\n        icon={props.icon}\n        placeholder=\"Enter a location\"\n        ref={eleRef}\n      ></input>\n    </div>\n  );\n};\n\nfunction SuggestionForm() {\n  let history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [labels, setLabels] = useState(\"\");\n  const [place, setPlace] = useState(null);\n  const [city, setCity] = useState(null);\n  const [error, setError] = useState(null);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"US\");\n  const store = useTravelStore();\n\n  useEffect(() => {\n    async function LoadCountries() {\n      let countries = await getCountriesList();\n      setCountries(countries);\n    }\n    LoadCountries();\n  }, []);\n\n  // makes things disappear after certain time\n  // useEffect(() => {\n  //   if (error) {\n  //     const timer = setTimeout(() => {\n  //       setError(null);\n  //     }, 5000);\n  //     return () => clearTimeout(timer);\n  //   }\n  // }, [error]);\n\n  const getCountriesList = async () => {\n    // add try catch later\n    let response = await fetch(\"/places/countries-list\");\n    let data = await response.json();\n    return data;\n  };\n\n  const handleAddSuggestion = async (e) => {\n    e.preventDefault();\n    let allCountries = await getCountriesList();\n    if (!store.user) {\n      setError(\"You must be logged in to create a suggestion.\");\n      return;\n    }\n    if (!place) {\n      setError(\"Please select a place\");\n      return;\n    }\n    if (!city) {\n      setError(\"Please select a city\");\n      return;\n    }\n    let matchingCountry = null;\n    let cityName = null;\n    //iterating over the address_components to locate type=\"country\"\n    componentIter: for (let component of city.address_components) {\n      if (component.types.includes(\"country\")) {\n        // located the country component\n        // iterate over our static list of countries to find a matching country\n        for (let country of allCountries) {\n          if (component.short_name === country.code) {\n            matchingCountry = country;\n            //located matching country\n            continue componentIter;\n          }\n        }\n      }\n      if (component.types.includes(\"locality\")) {\n        cityName = component.long_name;\n      }\n    }\n    if (!cityName) {\n      setError(\"Failed to find city. Please review your input\");\n      return;\n    }\n    if (!matchingCountry) {\n      setError(\"Failed to match location. Please review your input.\");\n      return;\n    }\n    let response = await fetch(\"/suggestions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        place: {\n          country,\n          continent: matchingCountry.continent,\n          city: cityName,\n          name: place.name,\n        },\n        title,\n        description,\n        labels,\n      }),\n    });\n    if (!response.ok) {\n      setError(\"Did not work.\");\n      return;\n    }\n    let data = await response.json();\n    console.log(data);\n    runInAction(() => {\n      store.suggestion = data;\n    });\n    history.push(`/suggestion/${data.id}`);\n    console.log(toJS(store.suggestion));\n  };\n\n  return (\n    <div className=\"suggestion-form\">\n      <form\n        className=\"suggestion-form-container\"\n        onSubmit={handleAddSuggestion}\n      >\n        <p style={{ color: \"red\" }}> {error}</p>\n        <h4>Create a new suggestion:</h4>\n        <select value={country} onChange={(e) => setCountry(e.target.value)}>\n          {countries.map((c, id) => {\n            return (\n              <option value={c.code} key={id}>\n                {c.country}\n              </option>\n            );\n          })}\n        </select>\n        <LocationAutocomplete\n          icon=\"fa-map-marker-alt\"\n          citiesOnly\n          onPlaceChanged={(city) => setCity(city)}\n          country={country}\n        />\n        <LocationAutocomplete\n          icon=\"fa-map-marker-alt\"\n          onPlaceChanged={(place) => setPlace(place)}\n          country={country}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-pen-nib\"\n          value={title}\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-comment\"\n          value={description}\n          name=\"title\"\n          placeholder=\"Description\"\n          longtext\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <SuggestionFormInput\n          type=\"text\"\n          icon=\"fa-tag\"\n          value={labels}\n          name=\"tags\"\n          placeholder=\"Tags...\"\n          onChange={(e) => setLabels(e.target.value)}\n        />\n        {/* <pre style={{ width: \"100%\", textAlign: \"left\" }}>\n          place: {JSON.stringify(place, null, 2)}\n        </pre> */}\n\n        <div id=\"get-login-btn\">\n          <button type=\"submit\" className=\"add-sug-btn\">\n            <i className=\"fas fa-paper-plane fa-lg\"></i>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\nexport default observer(SuggestionForm);\n","/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/Favorites.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/DisplaySuggestion.js",[],"/Users/amandadepaula/code/phase_5/final-project/travel-tips-frontend/src/components/VotesUpOrDown.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":17,"nodeType":"102","messageId":"103","endLine":8,"endColumn":25},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"96","replacedBy":"106"},{"ruleId":"98","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":9,"column":9,"nodeType":"110","messageId":"111","endLine":9,"endColumn":13},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":35,"column":13,"nodeType":"116","endLine":35,"endColumn":50},{"ruleId":"96","replacedBy":"117"},{"ruleId":"98","replacedBy":"118"},{"ruleId":"100","severity":1,"message":"119","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":75,"column":6,"nodeType":"122","endLine":75,"endColumn":21,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["124"],["125"],["124"],["125"],"no-dupe-keys","Duplicate key 'text'.","ObjectExpression","unexpected",["124"],["125"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["124"],["125"],"'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [props, props.country]",{"range":"129","text":"130"},[2125,2140],"[props, props.country]"]